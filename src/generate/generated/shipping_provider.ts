/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/stores/{store_hash}/v3/rate': {
    /** Request shipping rates. */
    post: operations['requestShippingRates'];
    parameters: {
      path: {
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v3/check_connection_options': {
    /** Validate connection options. */
    post: operations['validateConnectionOptions'];
    parameters: {
      path: {
        store_hash: string;
      };
    };
  };
}

export interface definitions {
  /**
   * Rate Request Payload
   * @description Payload sent off to a Shipping Provider in order to get quotes.
   */
  RateRequestPayload: {
    base_options: definitions['BaseOptions'];
    /**
     * Zone Options Instance
     * @description Optional, any zone specific request options declared by the carrier and configued by the merchant to retrieve rates
     */
    zone_options?: { [key: string]: unknown };
    /**
     * Connection Options Instance
     * @description Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates
     */
    connection_options?: { [key: string]: unknown };
  };
  /**
   * Base Options
   * @description Payload sent off to a Shipping Provider in order to get quotes.
   */
  BaseOptionsSchema: {
    /**
     * Base Rate Request
     * @description The minimum required payload that is sent to retrieve rates
     */
    base_options: {
      /**
       * Shipping Address
       * @description Object representing a destination or origin address for items.
       */
      origin: {
        street_1?: string;
        street_2?: string;
        /** @example 94105 */
        zip: string;
        /** @example San Francisco */
        city?: string;
        /** @description State in ISO_3166 2 format */
        state_iso2?: string;
        /**
         * @description Country in ISO_3166 2 format
         * @example US
         */
        country_iso2: string;
        /** @description Optional, defaults to residential */
        address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
      };
      /**
       * Shipping Address
       * @description Object representing a destination or origin address for items.
       */
      destination: {
        street_1?: string;
        street_2?: string;
        /** @example 94105 */
        zip: string;
        /** @example San Francisco */
        city?: string;
        /** @description State in ISO_3166 2 format */
        state_iso2?: string;
        /**
         * @description Country in ISO_3166 2 format
         * @example US
         */
        country_iso2: string;
        /** @description Optional, defaults to residential */
        address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
      };
      items: {
        /** @description The variant SKU */
        sku?: string;
        variant_id?: string;
        product_id?: string;
        name?: string;
        /**
         * Dimension Value
         * @description Value object for a length measurement
         */
        length?: {
          units: 'cm' | 'in';
          value: number;
        };
        /**
         * Dimension Value
         * @description Value object for a length measurement
         */
        width?: {
          units: 'cm' | 'in';
          value: number;
        };
        /**
         * Dimension Value
         * @description Value object for a length measurement
         */
        height?: {
          units: 'cm' | 'in';
          value: number;
        };
        /**
         * Weight Value
         * @description Value object for a weight measurement
         */
        weight?: {
          units: 'oz' | 'g';
          value: number;
        };
        /**
         * Money Value
         * @description Value object for a money amount
         */
        discounted_price?: {
          currency: string;
          amount: number;
        };
        /**
         * Money Value
         * @description Value object for a money amount
         */
        declared_value?: {
          currency: string;
          amount: number;
        };
        /** Format: int32 */
        quantity?: number;
        /** @description A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration. */
        attributes?: {
          /** @description The key associated with the meta field */
          key?: string;
          /** @description The value associated with the meta field */
          value?: string;
          /** @description The namespace associated with product(/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (/api-reference/store-management/catalog/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format `shipping_carrier_{yourCarrierId}` otherwise it will not be recognized as an attribute. */
          namespace?: string;
          /** @description Resource type associated with the meta field. Currently the only values available are 'product' or 'variant' */
          resource_type?: 'product' | 'variant';
          /** @description The resource id of the meta field */
          resource_id?: string;
          /** @description Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
          attribute_type?: 'metafield';
        }[];
      }[];
      /**
       * Customer Details
       * @description The details of the Customer that has made the purchase.
       */
      customer?: {
        customer_groups?: {
          customer_group_id?: number;
          customer_group_name?: string;
        }[];
        customer_id?: number;
      };
      cart_id?: string;
      store_id: string;
      /**
       * Request Context
       * @description A collection of Reference Value objects.
       */
      request_context?: {
        reference_values?: {
          name?: string;
          value?: string;
        }[];
      };
    };
    /**
     * Zone Options Instance
     * @description Optional, any zone specific request options declared by the carrier and configued by the merchant to retrieve rates
     */
    zone_options?: { [key: string]: unknown };
    /**
     * Connection Options Instance
     * @description Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates
     */
    connection_options?: { [key: string]: unknown };
  };
  /**
   * Customer Details
   * @description The details of the Customer that has made the purchase.
   */
  CustomerDetails: {
    customer_groups?: {
      customer_group_id?: number;
      customer_group_name?: string;
    }[];
    customer_id?: number;
  };
  /**
   * Zone Options Instance
   * @description Optional, any zone specific request options declared by the carrier and configued by the merchant to retrieve rates
   */
  ZoneOptionsInstance: { [key: string]: unknown };
  /**
   * Connection Options Instance
   * @description Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates
   */
  ConnectionOptionsInstance: { [key: string]: unknown };
  /**
   * Rate Options Instance
   * @description Optional, any checkout specific request options to retrieve rates
   */
  RateOptionsInstance: {
    key: string;
    value: string;
  }[];
  /**
   * Customer Group
   * @description The Group (if any) that this customer is in. This will be default to zero if the customer is not in a group or is a guest.
   */
  CustomerGroup: {
    customer_group_id?: number;
    customer_group_name?: string;
  };
  /** Key Value Pair */
  KeyValuePair: {
    key: string;
    value: string;
  };
  /**
   * Rate Response Payload
   * @description The response from the Shipping Service, will contain zero to many quotes.
   */
  RateResponsePayload: {
    quote_id: string;
    messages: {
      text: string;
      type: 'INFO' | 'WARNING' | 'ERROR';
    }[];
    carrier_quotes: {
      carrier_info?: {
        code: string;
        display_name: string;
      };
      quotes: {
        /**
         * @description A code describing the service
         * @example GND
         */
        code: string;
        /** @description A display name for the service */
        display_name: string;
        /**
         * Money Value
         * @description Value object for a money amount
         */
        cost: {
          currency: string;
          amount: number;
        };
        messages?: {
          text: string;
          type: 'INFO' | 'WARNING' | 'ERROR';
        }[];
        description?: string;
        rate_id?: string;
        /**
         * Money Value
         * @description Value object for a money amount
         */
        discounted_cost?: {
          currency: string;
          amount: number;
        };
        /** Format: date */
        dispatch_date?: string;
        /**
         * Transit Time Object
         * @description Value object for the length of time in transit
         */
        transit_time?: {
          units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
          duration?: number;
        };
      }[];
    }[];
  };
  /**
   * Carrier Quote Object
   * @description A grouping of carrier rates and optionally info about that carrier
   */
  CarrierQuoteObject: {
    carrier_info?: {
      code: string;
      display_name: string;
    };
    quotes: {
      /**
       * @description A code describing the service
       * @example GND
       */
      code: string;
      /** @description A display name for the service */
      display_name: string;
      /**
       * Money Value
       * @description Value object for a money amount
       */
      cost: {
        currency: string;
        amount: number;
      };
      messages?: {
        text: string;
        type: 'INFO' | 'WARNING' | 'ERROR';
      }[];
      description?: string;
      rate_id?: string;
      /**
       * Money Value
       * @description Value object for a money amount
       */
      discounted_cost?: {
        currency: string;
        amount: number;
      };
      /** Format: date */
      dispatch_date?: string;
      /**
       * Transit Time Object
       * @description Value object for the length of time in transit
       */
      transit_time?: {
        units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
        duration?: number;
      };
    }[];
  };
  /**
   * Rate Request Item
   * @description A cart item along with it's shipping specific attributes
   */
  RateRequestItem: {
    /** @description The variant SKU */
    sku?: string;
    variant_id?: string;
    product_id?: string;
    name?: string;
    /**
     * Dimension Value
     * @description Value object for a length measurement
     */
    length?: {
      units: 'cm' | 'in';
      value: number;
    };
    /**
     * Dimension Value
     * @description Value object for a length measurement
     */
    width?: {
      units: 'cm' | 'in';
      value: number;
    };
    /**
     * Dimension Value
     * @description Value object for a length measurement
     */
    height?: {
      units: 'cm' | 'in';
      value: number;
    };
    /**
     * Weight Value
     * @description Value object for a weight measurement
     */
    weight?: {
      units: 'oz' | 'g';
      value: number;
    };
    /**
     * Money Value
     * @description Value object for a money amount
     */
    discounted_price?: {
      currency: string;
      amount: number;
    };
    /**
     * Money Value
     * @description Value object for a money amount
     */
    declared_value?: {
      currency: string;
      amount: number;
    };
    /** Format: int32 */
    quantity?: number;
    /** @description A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of any public fields specific to the carrier integration. */
    attributes?: {
      /** @description The key associated with the product or product variant meta field */
      key?: string;
      /** @description The value associated with the product or product variant meta field */
      value?: string;
      /** @description The namespace associated with product(/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (/api-reference/store-management/catalog/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format `shipping_carrier_{yourCarrierId}` otherwise it will not be recognized as an attribute. */
      namespace?: string;
      /** @description Resource type associated with the product or product variant meta field. Currently the only values available are 'product' or 'variant' */
      resource_type?: 'product' | 'variant';
      /** @description The resource id of the product or product variant meta field */
      resource_id?: string;
      /** @description Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
      attribute_type?: 'metafield';
    }[];
  };
  /**
   * Request Context
   * @description A collection of Reference Value objects.
   */
  RequestContext: {
    reference_values?: {
      name?: string;
      value?: string;
    }[];
  };
  /**
   * Reference Value
   * @description Value objects contained within the request context
   */
  ReferenceValue: {
    name?: string;
    value?: string;
  };
  /**
   * Message
   * @description A simple string/type response for returning information.
   */
  Message: {
    text: string;
    type: 'INFO' | 'WARNING' | 'ERROR';
  };
  /**
   * Rate Quote Object
   * @description A quote being returned as part of the rate request.
   */
  RateQuoteObject: {
    /**
     * @description A code describing the service
     * @example GND
     */
    code: string;
    /** @description A display name for the service */
    display_name: string;
    /**
     * Money Value
     * @description Value object for a money amount
     */
    cost: {
      currency: string;
      amount: number;
    };
    messages?: {
      text: string;
      type: 'INFO' | 'WARNING' | 'ERROR';
    }[];
    description?: string;
    rate_id?: string;
    /**
     * Money Value
     * @description Value object for a money amount
     */
    discounted_cost?: {
      currency: string;
      amount: number;
    };
    /** Format: date */
    dispatch_date?: string;
    /**
     * Transit Time Object
     * @description Value object for the length of time in transit
     */
    transit_time?: {
      units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
      duration?: number;
    };
  };
  /**
   * Transit Time Object
   * @description Value object for the length of time in transit
   */
  TransitTimeObject: {
    units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
    duration?: number;
  };
  /**
   * Attribute Value
   * @description Value object for an attribute. This represents a product or product variant meta field.
   */
  AttributeValue: {
    /** @description The key associated with the product or product variant meta field */
    key?: string;
    /** @description The value associated with the product or product variant meta field */
    value?: string;
    /** @description The namespace associated with product(/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (/api-reference/store-management/catalog/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format `shipping_carrier_{yourCarrierId}` otherwise it will not be recognized as an attribute. */
    namespace?: string;
    /** @description Resource type associated with the product or product variant meta field. Currently the only values available are 'product' or 'variant' */
    resource_type?: 'product' | 'variant';
    resource_id?: string;
    /** @description Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
    attribute_type?: 'metafield';
  };
  /**
   * Money Value
   * @description Value object for a money amount
   */
  MoneyValue: {
    currency: string;
    amount: number;
  };
  /**
   * Dimension Value
   * @description Value object for a length measurement
   */
  DimensionValue: {
    units: 'cm' | 'in';
    value: number;
  };
  /**
   * Weight Value
   * @description Value object for a weight measurement
   */
  WeightValue: {
    units: 'oz' | 'g';
    value: number;
  };
  /**
   * Rate Options Schema
   * @description A set of carrier specific fields that will be displayed to shoppers at checkout
   */
  RateOptionsSchema: {
    /** @description The internal code that represents this input field */
    code: string;
    /** @description Display name for this input field */
    label: string;
    /** @description Longer description text to be displayed as a tooltip at checkout */
    description?: string;
    /** @description Placeholder for any validation we choose to implement */
    validation?: string;
    /** @description How this input will be displayed */
    type: 'date' | 'string' | 'select' | 'code';
    /** @description A valid default value for this field */
    default_value: string;
    /** @description For select type fields, the list of available options */
    value_options?: string[];
    /** @description For date type fields, a set of valid date ranges available to choose from */
    date_ranges?: {
      /**
       * Date Value
       * @description Value Object representing a Date
       */
      from?: {
        /** Format: date */
        date?: string;
        timezone?: string;
      };
      /**
       * Date Value
       * @description Value Object representing a Date
       */
      to?: {
        /** Format: date */
        date?: string;
        timezone?: string;
      };
    }[];
  }[];
  /**
   * Key Value Pair Schema
   * @description An individual carrier defined field to display at checkout, along with any defaults and validation
   */
  KeyValuePairSchema: {
    /** @description The internal code that represents this input field */
    code: string;
    /** @description Display name for this input field */
    label: string;
    /** @description Longer description text to be displayed as a tooltip at checkout */
    description?: string;
    /** @description Placeholder for any validation we choose to implement */
    validation?: string;
    /** @description How this input will be displayed */
    type: 'date' | 'string' | 'select' | 'code';
    /** @description A valid default value for this field */
    default_value: string;
    /** @description For select type fields, the list of available options */
    value_options?: string[];
    /** @description For date type fields, a set of valid date ranges available to choose from */
    date_ranges?: {
      /**
       * Date Value
       * @description Value Object representing a Date
       */
      from?: {
        /** Format: date */
        date?: string;
        timezone?: string;
      };
      /**
       * Date Value
       * @description Value Object representing a Date
       */
      to?: {
        /** Format: date */
        date?: string;
        timezone?: string;
      };
    }[];
  };
  /**
   * Shipping Address
   * @description Object representing a destination or origin address for items.
   */
  ShippingAddress: {
    street_1?: string;
    street_2?: string;
    /** @example 94105 */
    zip: string;
    /** @example San Francisco */
    city?: string;
    /** @description State in ISO_3166 2 format */
    state_iso2?: string;
    /**
     * @description Country in ISO_3166 2 format
     * @example US
     */
    country_iso2: string;
    /** @description Optional, defaults to residential */
    address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
  };
  /**
   * Check Connection Options Request Payload
   * @description The payload sent to a Shipping Provider to check that the store is connected to this provider.
   * Each Shipping Provider will have different configurations for the payload.
   */
  CheckConnectionOptionsRequestPayload: {
    /**
     * Connection Options Instance
     * @description Optional, any global request options declared by the carrier and configued by the merchant to retrieve rates
     */
    connection_options: { [key: string]: unknown };
  };
  /**
   * Check Connection Options Response Payload
   * @description The response recieved back from the Shipping Provider connection check this allows the store to understand if the connection was successful.
   */
  CheckConnectionOptionsResponsePayload: {
    /** @description Indicates whether or not the connection options are valid */
    valid?: boolean;
    messages?: {
      text: string;
      type: 'INFO' | 'WARNING' | 'ERROR';
    }[];
  };
  /**
   * Date Range
   * @description Representation of a range of date objects
   */
  DateRange: {
    /**
     * Date Value
     * @description Value Object representing a Date
     */
    from?: {
      /** Format: date */
      date?: string;
      timezone?: string;
    };
    /**
     * Date Value
     * @description Value Object representing a Date
     */
    to?: {
      /** Format: date */
      date?: string;
      timezone?: string;
    };
  };
  /**
   * Date Value
   * @description Value Object representing a Date
   */
  DateValue: {
    /** Format: date */
    date?: string;
    timezone?: string;
  };
  /**
   * Base Rate Request
   * @description The minimum required payload that is sent to retrieve rates
   */
  BaseOptions: {
    /**
     * Shipping Address
     * @description Object representing a destination or origin address for items.
     */
    origin: {
      street_1?: string;
      street_2?: string;
      /** @example 94105 */
      zip: string;
      /** @example San Francisco */
      city?: string;
      /** @description State in ISO_3166 2 format */
      state_iso2?: string;
      /**
       * @description Country in ISO_3166 2 format
       * @example US
       */
      country_iso2: string;
      /** @description Optional, defaults to residential */
      address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
    };
    /**
     * Shipping Address
     * @description Object representing a destination or origin address for items.
     */
    destination: {
      street_1?: string;
      street_2?: string;
      /** @example 94105 */
      zip: string;
      /** @example San Francisco */
      city?: string;
      /** @description State in ISO_3166 2 format */
      state_iso2?: string;
      /**
       * @description Country in ISO_3166 2 format
       * @example US
       */
      country_iso2: string;
      /** @description Optional, defaults to residential */
      address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
    };
    items: {
      /** @description The variant SKU */
      sku?: string;
      variant_id?: string;
      product_id?: string;
      name?: string;
      /**
       * Dimension Value
       * @description Value object for a length measurement
       */
      length?: {
        units: 'cm' | 'in';
        value: number;
      };
      /**
       * Dimension Value
       * @description Value object for a length measurement
       */
      width?: {
        units: 'cm' | 'in';
        value: number;
      };
      /**
       * Dimension Value
       * @description Value object for a length measurement
       */
      height?: {
        units: 'cm' | 'in';
        value: number;
      };
      /**
       * Weight Value
       * @description Value object for a weight measurement
       */
      weight?: {
        units: 'oz' | 'g';
        value: number;
      };
      /**
       * Money Value
       * @description Value object for a money amount
       */
      discounted_price?: {
        currency: string;
        amount: number;
      };
      /**
       * Money Value
       * @description Value object for a money amount
       */
      declared_value?: {
        currency: string;
        amount: number;
      };
      /** Format: int32 */
      quantity?: number;
      /** @description A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration. */
      attributes?: {
        /** @description The key associated with the meta field */
        key?: string;
        /** @description The value associated with the meta field */
        value?: string;
        /** @description The namespace associated with product(/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) or product variant (/api-reference/store-management/catalog/product-variants-metafields/createvariantmetafield) meta fields. The meta field namespace should be saved under this format `shipping_carrier_{yourCarrierId}` otherwise it will not be recognized as an attribute. */
        namespace?: string;
        /** @description Resource type associated with the meta field. Currently the only values available are 'product' or 'variant' */
        resource_type?: 'product' | 'variant';
        /** @description The resource id of the meta field */
        resource_id?: string;
        /** @description Attribute type associated with the product or product variant meta field. Currently the only value for this is 'metafield' */
        attribute_type?: 'metafield';
      }[];
    }[];
    /**
     * Customer Details
     * @description The details of the Customer that has made the purchase.
     */
    customer?: {
      customer_groups?: {
        customer_group_id?: number;
        customer_group_name?: string;
      }[];
      customer_id?: number;
    };
    cart_id?: string;
    store_id: string;
    /**
     * Request Context
     * @description A collection of Reference Value objects.
     */
    request_context?: {
      reference_values?: {
        name?: string;
        value?: string;
      }[];
    };
  };
}

export interface operations {
  /** Request shipping rates. */
  requestShippingRates: {
    parameters: {
      path: {
        store_hash: string;
      };
      body: {
        /** Rate request object */
        body: definitions['RateRequestPayload'];
      };
    };
    responses: {
      /** Quote response */
      200: {
        schema: definitions['RateResponsePayload'];
      };
    };
  };
  /** Validate connection options. */
  validateConnectionOptions: {
    parameters: {
      path: {
        store_hash: string;
      };
      body: {
        /** Check connection options request */
        body: definitions['CheckConnectionOptionsRequestPayload'];
      };
    };
    responses: {
      /** Check connection options response */
      200: {
        schema: definitions['CheckConnectionOptionsResponsePayload'];
      };
    };
  };
}

export interface external {}
