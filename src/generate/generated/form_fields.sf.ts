/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/form-fields': {
    /**
     * Gets form fields.
     *
     * <!-- theme: info -->
     * > #### Note
     * > The Send a Test Request feature is not currently supported for this endpoint.
     */
    get: {
      parameters: {
        query: {
          filter?: 'customerAccount' | 'shippingAddress' | 'billingAddress';
        };
      };
      responses: {
        /** Returns an object with form fields groups. */
        200: {
          schema: definitions['FormFieldGroups'];
        };
      };
    };
  };
}

export interface definitions {
  /** @description Group of form field groups */
  FormFieldGroups: {
    customerAccount?: definitions['FormFields'];
    shippingAddress?: definitions['FormFields'];
    billingAddress?: definitions['FormFields'];
  };
  /** @description List of form fields for the group */
  FormFields: definitions['FormField'][];
  /** @description Form Field */
  FormField: {
    /** @description Field unique ID */
    id?: string;
    /** @description Field name */
    name?: string;
    /** @description Wether is a custom field or system built-in field. */
    custom?: boolean;
    /** @description User-friendly label */
    label?: string;
    /** @description Wether this field is required or not */
    required?: boolean;
    /** @description The field unique ID */
    default?: string;
    /** @description Type of the value hold by the field */
    type?: 'integer' | 'string' | 'array' | 'date';
    /** @description Type of the field */
    fieldType?: 'checkbox' | 'text' | 'date' | 'multiline' | 'radio' | 'dropdown';
    /** @description The minimun valid value for the field (integer and date type only) */
    min?: string;
    /** @description The minimun valid value for the field (integer and date type only) */
    max?: string;
    /** @description The maximum length for the value (string type only) */
    maxLength?: number;
    /** @description Whether the field represents a password field */
    secret?: boolean;
    /** @description Extra data for radio, dropdown and checkbox field types. */
    options?: {
      /** @description Placeholder text for dropdown field type. */
      helperLabel?: string;
      /** @description List of possible values for this field. */
      items?: {
        label?: string;
        value?: string;
      }[];
    };
  };
}

export interface operations {}

export interface external {}
