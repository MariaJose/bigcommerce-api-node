/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/stores/{store_hash}/v2/countries': {
    /** Get a list of all countries available. A country or territory, identifiable by an ISO 3166 country code. */
    get: {
      parameters: {
        path: {
          store_hash: string;
        };
        header: {
          Accept: string;
          'Content-Type': string;
        };
        query: {
          /** Number of pages */
          page?: number;
          /** Count per page */
          limit?: number;
          country?: string;
          country_iso2?: string;
          country_iso3?: string;
        };
      };
      responses: {
        200: components['responses']['countryCollection_Resp'];
      };
    };
    parameters: {
      path: {
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/{id}': {
    /** Returns a single *Country*.  Gets a country. A country or territory, identifiable by an ISO 3166 country code. */
    get: {
      parameters: {
        path: {
          /** The id of the country. */
          id: number;
          store_hash: string;
        };
        header: {
          Accept: string;
          'Content-Type': string;
        };
      };
      responses: {
        200: components['responses']['countriesResponse'];
      };
    };
    parameters: {
      path: {
        id: string;
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/{country_id}/states': {
    /**
     * Returns a list of *States* belonging to a *Country*.
     * A state or province, identifiable by an ISO 3166 subdivision code.
     */
    get: {
      parameters: {
        path: {
          /** Id of the country */
          country_id: number;
          store_hash: string;
        };
        header: {
          Accept: string;
          'Content-Type': string;
        };
        query: {
          /** Name of the state/province. */
          state?: string;
          /** Abbreviation for the state/province. */
          state_abbreviation?: string;
          /** Number of pages */
          page?: number;
          /** Count per page */
          limit?: number;
        };
      };
      responses: {
        200: components['responses']['countriesStatesCollectionResponse'];
      };
    };
    parameters: {
      path: {
        country_id: string;
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/{country_id}/states{id}': {
    /**
     * Returns a *State*.
     * A state or province, identifiable by an ISO 3166 subdivision code.
     */
    get: {
      parameters: {
        path: {
          /** Id of the country */
          country_id: number;
          /** Id of the states */
          id: number;
          store_hash: string;
        };
        header: {
          Accept: string;
          'Content-Type': string;
        };
      };
      responses: {
        200: components['responses']['countriesStatesResponse'];
      };
    };
    parameters: {
      path: {
        country_id: string;
        id: string;
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/count': {
    /** Returns a count of all countries. */
    get: operations['countriesCount'];
    parameters: {
      path: {
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/states/count': {
    /** Returns a count of all states. */
    get: {
      parameters: {
        path: {
          store_hash: string;
        };
      };
      responses: {
        200: components['responses']['countResponse'];
      };
    };
    parameters: {
      path: {
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/states': {
    /** Returns a list of all states. */
    get: {
      parameters: {
        path: {
          store_hash: string;
        };
      };
      responses: {
        200: components['responses']['countriesStatesCollectionResponse'];
      };
    };
    parameters: {
      path: {
        store_hash: string;
      };
    };
  };
  '/stores/{store_hash}/v2/countries/{country_id}/states/count': {
    /** Returns a count of a country's states. */
    get: {
      parameters: {
        path: {
          country_id: string;
          store_hash: string;
        };
      };
      responses: {
        200: components['responses']['countResponse'];
      };
    };
    parameters: {
      path: {
        country_id: string;
        store_hash: string;
      };
    };
  };
}

export interface components {
  schemas: {
    /**
     * country_Full
     * @example [object Object]
     */
    country_Full: {
      /**
       * @description Id of the country.
       * @example 13
       */
      id?: number;
    } & components['schemas']['country_Base'] & {
        states?: components['schemas']['countriesStates_Full'];
      };
    /**
     * countriesStates_Full
     * @description Refers to the `states` object return in `GET` countries requests.
     */
    countriesStates_Full: {
      /** @example https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states */
      url?: string;
      /** @example /countries/13/states */
      resource?: string;
    };
    /**
     * countriesState_Full
     * @description Refers to the state returned in `GET` states requests.
     * @example [object Object]
     */
    countriesState_Full: {
      /**
       * @description Numeric ID of the state/province.
       * @example 208
       */
      id?: number;
      /**
       * @description Name of the state/province.
       * @example Australian Capital Territory
       */
      state?: string;
      /**
       * @description Abbreviation for the state/province.
       * @example ACT
       */
      state_abbreviation?: string;
      /**
       * @description Numeric ID of the state’s/province’s associated country.
       * @example 13
       */
      country_id?: number;
    };
    /** country_Base */
    country_Base: {
      /**
       * @description Country name.
       * @example Australia
       */
      country?: string;
      /**
       * @description 2-letter country code.
       * @example AU
       */
      country_iso2?: string;
      /**
       * @description 3-letter country code.
       * @example AUS
       */
      country_iso3?: string;
    };
    count_Full: {
      count?: number;
    };
  };
  responses: {
    countriesResponse: {
      content: {
        'application/json': components['schemas']['country_Full'];
      };
    };
    countriesStatesResponse: {
      content: {
        'application/json': components['schemas']['countriesState_Full'];
      };
    };
    countryCollection_Resp: {
      content: {
        'application/json': components['schemas']['country_Full'][];
      };
    };
    countriesStatesCollectionResponse: {
      content: {
        'application/json': components['schemas']['countriesState_Full'][];
      };
    };
    countResponse: {
      content: {
        'application/json': components['schemas']['count_Full'];
      };
    };
  };
}

export interface operations {
  /** Returns a count of all countries. */
  countriesCount: {
    parameters: {
      path: {
        store_hash: string;
      };
    };
    responses: {
      200: components['responses']['countResponse'];
    };
  };
}

export interface external {}
